@{
    Layout = "";
}

@using HST.Art.Web
@using HST.Art.Core
@using HST.Utillity

@Scripts.Render("~/bundles/saos")
@Scripts.Render("~/bundles/ajaxAsync")
@Scripts.Render("~/bundles/validate")
@Styles.Render("~/appcss")
<nav class="breadcrumb"><i class="Hui-iconfont">&#xe67f;</i> 首页 <span class="c-gray en">&gt;</span><a href="javascript:void(0)" onclick="layer_close()">类别设置</a><span class="c-gray en">&gt;</span><a href="javascript:void(0)" onclick="location.reload()">大类管理</a> </nav>
<article class="page-container">
        <div class="cl search-wrap" style="padding-bottom:10px;">
            <button name="search" class="btn btn-primary  float-right" type="button">添加类别</button>
            <span class="help-block help-tip  " style="font-size:13px">添加和编辑类别将在表格中完成，便于您对类别的维护</span>
        </div>
        <div style="margin-top:-10px">
            <table id="tbTableP" class="table table-border table-bordered table-bg table-sort">
                <thead>
                    <tr class="text-c">
                        <th width="8%">序号</th>
                        <th>类别名称</th>
                        <th width="10%">状态</th>
                        <th width="15%">创建时间</th>
                        <th width="10%">创建人</th>
                        <th width="15%">操作</th>
                    </tr>
                </thead>
            </table>
        </div>
    <div class="hidden">
        <input type="hidden" id="categoryType" value="@CategoryType.Examination" />
    </div>
</article>

@Scripts.Render("~/bundles/datatable")
<script type="text/javascript">
    var table2 = null;
    $(function () {
        table2 = initializeTable();
    });


    function category_deit(obj, id) {



    }

    function initializeTable() {
        var dataTable = $('#tbTableP').DataTable({
            "serverSide": true,
            "ajax": {
                "url": "@Url.Action("GetJsonData")",
                "type": "post",
                "data": function (data) {
                    data.pageIndex = (data.start / data.length) + 1;
                    data.categoryType = $("#categoryType").val();
                    data.isParent = true;
                }
            },
            "columns": [
                { "defaultContent": "" },
                { "mDataProp": "CategoryName" },
                 { "mDataProp": "State" },
                { "mDataProp": "CreateTime" },
                 { "mDataProp": "UserName" },
                { "defaultContent": "" }
            ],
            "columnDefs": [
             {
                 "targets": [2],
                 "data": "State",
                 "render": function (data, type, full) {
                     var result = data;
                     if (data > 0) {
                         result = "<span class=\"label label-success radius\">已上架</span>";
                     } else {
                         result = "<span class=\"label label-danger radius\">已下架</span>";
                     }

                     return result;
                 }
             },
            {
                "targets": [-1],
                "data": "Id",
                "render": function (data, type, full) {
                    var tmpString = "<a  onClick=\"category_deit(this," + data + ")\" href=\"javascript:;\" title=\"编辑\">编辑</a>";
                    if (full.State == 0)
                        tmpString += "<a href=\"javascript:;\" onClick=\"obj_publish('@Url.Action("Publish")'," + data + ")\"  title=\"上架\">上架</a>";
                    else
                        tmpString += "<a href=\"javascript:;\" onClick=\"obj_shelves('@Url.Action("Shelves")'," + data + ")\"  title=\"下架\">下架</a>";
                    tmpString += "<a href=\"javascript:;\" onClick=\"obj_del('轮播','@Url.Action("Delete")'," + data + ")\"  title=\"删除\">删除</a>";

                    return tmpString;
                }
            }
            ],
            "fnDrawCallback": function () {
                var api = this.api();
                var startIndex = api.context[0]._iDisplayStart;
                api.column(0).nodes().each(function (cell, i) {
                    cell.innerHTML = startIndex + i + 1;
                });
            },
            "rowCallback": function (row, data, displayIndex) {
                $(row).attr("class", "text-c").attr("data-bind", data.Id);
                $(row).children('td').eq(2).attr("class", "td-status");
                $(row).children('td').eq(5).attr("class", "td-manage");
            },
            "initComplete": function (settings, json) {
            },
            language: {
                lengthMenu: '',
                loadingRecords: '数据加载中...',
                paginate: {
                    previous: "上一页",
                    next: "下一页",
                    first: "",
                    last: ""
                },
                zeroRecords: "暂无数据",

                info: "<span class='pagesStyle'>总共<span class='recordsStyle'> _TOTAL_ 条,计 _PAGES_ </span>页，当前显示 _START_ -- _END_ 条记录 </span>",
                infoEmpty: "0条记录",
                infoFiltered: ""
            },
            "searching": false,
            "ordering": false,
            "autoWidth": false,
            "iDisplayLength": 50,
            "processing": true,
            //destroy: true, //Cannot reinitialise DataTable,解决重新加载表格内容问题

        });

        return dataTable;
    }

    function formSuccess(result) {
        if (result != null) {
            if (result.isSuccess) {
                top.layer.alert('操作成功！', {
                    icon: 6, closeBtn: 0, yes: function () {
                        location.reload();
                        parent.layer.closeAll();
                    }
                });
            } else {
                top.layer.alert('操作失败！', { icon: 5 });
            }
        } else {
            top.layer.alert('操作失败！', { icon: 5 });
        }
    }
</script>
